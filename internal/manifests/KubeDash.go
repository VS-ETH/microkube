/*
 * THIS FILE IS AUTOGENERATED by github.com/uubk/microkube/cmd/codegen/Manifest.go
 * DO NOT TOUCH.
 * In case of issues, please fix the code generator ;)
 */

package manifests

import (
	"bytes"
	"text/template"
)

const kobjSKubeDashO0 = `{"kind":"Secret","apiVersion":"v1","metadata":{"name":"kubernetes-dashboard-certs","namespace":"kube-system","creationTimestamp":null,"labels":{"k8s-app":"kubernetes-dashboard"}},"type":"Opaque"}`
const kobjSKubeDashO1 = `{"kind":"ServiceAccount","apiVersion":"v1","metadata":{"name":"kubernetes-dashboard","namespace":"kube-system","creationTimestamp":null,"labels":{"k8s-app":"kubernetes-dashboard"}}}`
const kobjSKubeDashO2 = `{"kind":"Role","apiVersion":"rbac.authorization.k8s.io/v1","metadata":{"name":"kubernetes-dashboard-minimal","namespace":"kube-system","creationTimestamp":null},"rules":[{"verbs":["create"],"apiGroups":[""],"resources":["secrets"]},{"verbs":["create"],"apiGroups":[""],"resources":["configmaps"]},{"verbs":["get","update","delete"],"apiGroups":[""],"resources":["secrets"],"resourceNames":["kubernetes-dashboard-key-holder","kubernetes-dashboard-certs"]},{"verbs":["get","update"],"apiGroups":[""],"resources":["configmaps"],"resourceNames":["kubernetes-dashboard-settings"]},{"verbs":["proxy"],"apiGroups":[""],"resources":["services"],"resourceNames":["heapster"]},{"verbs":["get"],"apiGroups":[""],"resources":["services/proxy"],"resourceNames":["heapster","http:heapster:","https:heapster:"]}]}`
const kobjSKubeDashO3 = `{"kind":"RoleBinding","apiVersion":"rbac.authorization.k8s.io/v1","metadata":{"name":"kubernetes-dashboard-minimal","namespace":"kube-system","creationTimestamp":null},"subjects":[{"kind":"ServiceAccount","name":"kubernetes-dashboard","namespace":"kube-system"}],"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"kubernetes-dashboard-minimal"}}`
const kobjSKubeDashO4 = `{"kind":"Deployment","apiVersion":"apps/v1","metadata":{"name":"kubernetes-dashboard","namespace":"kube-system","creationTimestamp":null,"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"name":"tmp-volume","emptyDir":{}}],"containers":[{"name":"kubernetes-dashboard","image":"k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0","args":["--auto-generate-certificates"],"ports":[{"containerPort":8443,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kubernetes-dashboard-certs","mountPath":"/certs"},{"name":"tmp-volume","mountPath":"/tmp"}],"livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30}}],"serviceAccountName":"kubernetes-dashboard","tolerations":[{"key":"node-role.kubernetes.io/master","effect":"NoSchedule"}]}},"strategy":{},"revisionHistoryLimit":10},"status":{}}`
const kobjSKubeDashHO = `{"kind":"Deployment","apiVersion":"apps/v1","metadata":{"name":"kubernetes-dashboard","namespace":"kube-system","creationTimestamp":null,"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"name":"tmp-volume","emptyDir":{}}],"containers":[{"name":"kubernetes-dashboard","image":"k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0","args":["--auto-generate-certificates"],"ports":[{"containerPort":8443,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kubernetes-dashboard-certs","mountPath":"/certs"},{"name":"tmp-volume","mountPath":"/tmp"}],"livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30}}],"serviceAccountName":"kubernetes-dashboard","tolerations":[{"key":"node-role.kubernetes.io/master","effect":"NoSchedule"}]}},"strategy":{},"revisionHistoryLimit":10},"status":{}}`
const kobjSKubeDashO6 = `{"kind":"Service","apiVersion":"v1","metadata":{"name":"kubernetes-dashboard","namespace":"kube-system","creationTimestamp":null,"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}},"status":{"loadBalancer":{}}}`
const kobjSKubeDashO7 = `{"kind":"ServiceAccount","apiVersion":"v1","metadata":{"name":"admin-user","namespace":"kube-system","creationTimestamp":null}}`
const kobjSKubeDashO8 = `{"kind":"ClusterRoleBinding","apiVersion":"rbac.authorization.k8s.io/v1beta1","metadata":{"name":"admin-user","creationTimestamp":null},"subjects":[{"kind":"ServiceAccount","name":"admin-user","namespace":"kube-system"}],"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"cluster-admin"}}`

type KubeDash struct {
	KubeManifestBase
}

func NewKubeDash(rtEnv KubeManifestRuntimeInfo) (KubeManifest, error) {
	obj := &KubeDash{}
	obj.SetName("KubeDash")
	var err error
	var buf *bytes.Buffer
	var tmpl *template.Template

	tmpl, err = template.New("kobjSKubeDashO0").Parse(kobjSKubeDashO0)
	if err != nil {
		return nil, err
	}
	buf = bytes.NewBufferString("")
	tmpl.Execute(buf, rtEnv)
	obj.Register(buf.String())
	tmpl, err = template.New("kobjSKubeDashO1").Parse(kobjSKubeDashO1)
	if err != nil {
		return nil, err
	}
	buf = bytes.NewBufferString("")
	tmpl.Execute(buf, rtEnv)
	obj.Register(buf.String())
	tmpl, err = template.New("kobjSKubeDashO2").Parse(kobjSKubeDashO2)
	if err != nil {
		return nil, err
	}
	buf = bytes.NewBufferString("")
	tmpl.Execute(buf, rtEnv)
	obj.Register(buf.String())
	tmpl, err = template.New("kobjSKubeDashO3").Parse(kobjSKubeDashO3)
	if err != nil {
		return nil, err
	}
	buf = bytes.NewBufferString("")
	tmpl.Execute(buf, rtEnv)
	obj.Register(buf.String())
	tmpl, err = template.New("kobjSKubeDashO4").Parse(kobjSKubeDashO4)
	if err != nil {
		return nil, err
	}
	buf = bytes.NewBufferString("")
	tmpl.Execute(buf, rtEnv)
	obj.Register(buf.String())
	obj.RegisterHO(kobjSKubeDashHO)
	tmpl, err = template.New("kobjSKubeDashO6").Parse(kobjSKubeDashO6)
	if err != nil {
		return nil, err
	}
	buf = bytes.NewBufferString("")
	tmpl.Execute(buf, rtEnv)
	obj.Register(buf.String())
	tmpl, err = template.New("kobjSKubeDashO7").Parse(kobjSKubeDashO7)
	if err != nil {
		return nil, err
	}
	buf = bytes.NewBufferString("")
	tmpl.Execute(buf, rtEnv)
	obj.Register(buf.String())
	tmpl, err = template.New("kobjSKubeDashO8").Parse(kobjSKubeDashO8)
	if err != nil {
		return nil, err
	}
	buf = bytes.NewBufferString("")
	tmpl.Execute(buf, rtEnv)
	obj.Register(buf.String())

	return obj, nil
}
